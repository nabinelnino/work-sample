---
version: '3'

x-airflow-common:
  &airflow-common
  image: apache/airflow:2.1.2-python3.8
  environment:
    &airflow-common-env
    AIRFLOW__CORE__LOAD_EXAMPLES: False
#    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: sqlite:////usr/local/airflow/db/airflow.db
#    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./db:/usr/local/airflow/db
    - ./raw_data:/opt/airflow/raw_data
    - ./processed_data:/opt/airflow/processed_data
  user: "${AIRFLOW_UID:-50000}:${AIRFLOW_GID:-50000}"
#  user: root
services:
  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash -c "/bin/bash -c \"$${@}\""
    command: |
      /bin/bash -c "
        airflow db init
        airflow db upgrade
        airflow users create -r Admin -u admin -e airflow@airflow.com -f admin -l user -p airflow
        /usr/local/bin/dockerize -wait tcp://pyspark:7077
        echo 'PySpark environment is ready'
      "
    environment:
      <<: *airflow-common-env

  pyspark:
    image: apache/airflow:2.1.1-python3.8
    command: /bin/bash -c "while true; do sleep 30; done;"

    environment:
      <<: *airflow-common-env

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    environment:
      <<: *airflow-common-env
    depends_on:
      - pyspark
    restart: always

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - 8081:8080
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    depends_on:
      - pyspark
    restart: always
    environment:
      <<: *airflow-common-env
